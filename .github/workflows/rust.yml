name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:      
    - name: Checkout code
      uses: actions/checkout@v4

    # Cache cargo registry (source code artifacts only):
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    # Restore target cache
    - name: Restore third-party dependencies cache
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-deps-

    # Install cargo-binstall
    - name: Install cargo-binstall
      run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

    # Install Just using cargo-binstall
    - name: Install Just
      run: cargo binstall --no-confirm just

    - name: Install other dependencies listed in Justfile (bin-deps)
      run: just bin-deps

    - name: Build
      run: just build --release

    - name: Run tests
      run: just test --release
      
    # Remove project-specific artifacts from target, to not invalidate the cache:
    - name: Remove project-specific artifacts
      run: |
        PROJECT_NAME=$(grep '^name' Cargo.toml | sed 's/name = "\(.*\)"/\1/')
        find target/ | grep "${PROJECT_NAME}" | xargs -iXX rm -rf XX
